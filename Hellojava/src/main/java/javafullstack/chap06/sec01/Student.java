package javafullstack.chap06.sec01;

/**
 * packageName : chap06
 * fileName : Student
 * author : hyuk
 * date : 2022/09/27
 * description : 객체 지향 프로그래밍
 * ===========================================================
 * DATE            AUTHOR             NOTE
 * —————————————————————————————
 * 2022/09/27         hyuk          최초 생성
 */
// 학생 클래스(객체 정의)
//    💡사용법 : 접근제어자(public) class 클래스명(파일명 일치, 다르면 에러남‼️) {}
//      클래스명 == 클래스명.java
//      파일 1개당 클래스 1개 기본
//      자바(컴파일언어).java => (컴파일) => 자바.class(컴퓨터가 알 수 있는 파일로 변경
//                                  => java 자바
//    객체 : 학생, 강사, 학원, 자동차, 오토바이, ...
//    학생 속성(특징) : 이름, 주소, 주민번호, ...
//    학생 함수(동작, 기능) : 달린다, 걷는다, 밥먹는다, ...
//    객체 지향 프로그래밍 : 위의 객체를 만들어서 함수를 호출해서 코딩하는 것
//    클래스 2개 : 1개는 클래스, 함수를 정의( 라이브러리 클래스 ) ex) js에서 lodash같은거
//              main() 함수가 포함된 클래스는 객체 생성 후 실행만 (실행 클래스)
//    객체는 서로 상호작용 : 서로의 함수들을 가져다가 사용
//                     ( 1. 상속, 2. 구성 )
//    ex) 학생(객체) <---------> 전자계산기(객체)
//        학생객체 전자계산기의 함수를 호출
//        전자계산기는 함수의 결과를 반환

public class Student {
//    속성(== 멤버변수 == 필드)
//    생성자(함수)
//    함수(== 멤버메소드)
    public void myPrint(){
        System.out.println("Student 객체를 출력합니다");
    }
}
